"use strict";angular.module("lockersApp",["ngCookies","ngResource","ngSanitize","ui.router","ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",function($stateProvider,$urlRouterProvider,$locationProvider){$urlRouterProvider.otherwise("/"),$locationProvider.html5Mode(!0)}]),angular.module("lockersApp").controller("AdminCtrl",["$scope","$log","Locker",function($scope,$log,Locker){function refreshLockers(){$scope.lockersInUse=_.filter($scope.lockers,function(locker){return locker.inUse}),$scope.buttonDisabled=!1}$scope.lockersInUse=[],$scope.lockers=[],Locker.query().$promise.then(function(lockers){$scope.lockers=lockers,refreshLockers()}),$scope.wipeData=function(){$scope.buttonDisabled=!0,Locker.wipe().$promise.then(function(){$scope.lockers=[],refreshLockers()})},$scope.createData=function(){console.log("createData"),$scope.buttonDisabled=!0,Locker.setup().$promise.then(function(lockers){console.log("returned from setup on server"),$scope.lockers=lockers,refreshLockers()})},$scope.showByNumber=function(){$scope.selectedLocker=Locker.get({id:$scope.lockerNumber}),$log.debug($scope.selectedLocker)}}]),angular.module("lockersApp").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminCtrl"})}]),angular.module("lockersApp").controller("MainCtrl",["$scope","$http","$log","$timeout","$modal","Locker",function($scope,$http,$log,$timeout,$modal,Locker){function refreshLockers(){Locker.query().$promise.then(function(lockers){$scope.lockers=lockers,$scope.smallCount=_.filter(lockers,function(locker){return"small"===locker.size}).length,$scope.smallCountNotInUse=_.filter(lockers,function(locker){return"small"===locker.size&&!locker.inUse}).length,$scope.mediumCount=_.filter(lockers,function(locker){return"medium"===locker.size}).length,$scope.mediumCountNotInUse=_.filter(lockers,function(locker){return"medium"===locker.size&&!locker.inUse}).length,$scope.largeCount=_.filter(lockers,function(locker){return"large"===locker.size}).length,$scope.largeCountNotInUse=_.filter(lockers,function(locker){return"large"===locker.size&&!locker.inUse}).length,$scope.openLockers=_.filter(lockers,function(locker){return!locker.inUse}).length})}$scope.pickupMessage="",refreshLockers(),$scope.dropOff=function(size){var firstLocker=_.chain($scope.lockers).filter(function(locker){return locker.size===size&&!locker.inUse}).first().value();firstLocker&&($scope.checkedInLocker=firstLocker,firstLocker.inUse=!0,firstLocker.$update(),$scope.open("sm"),refreshLockers())},$scope.pickUp=function(){var theLocker=_.chain($scope.lockers).filter(function(locker){return locker.slot===$scope.lockerNumber&&locker.inUse}).first().value();theLocker?(theLocker.inUse=!1,theLocker.$update(),$scope.pickupMessage="Slot "+$scope.lockerNumber+" is now available.",refreshLockers(),$scope.lockerNumber="",$timeout(function(){$scope.pickupMessage=""},5e3)):$scope.pickupMessage="Yeah, I'm pretty sure somebody already picked up that locker's stuff."},$scope.open=function(size){var modalInstance=$modal.open({templateUrl:"myModalContent.html",controller:ModalInstanceCtrl,size:size,resolve:{locker:function(){return $scope.checkedInLocker}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})}}]);var ModalInstanceCtrl=function($scope,$log,$modalInstance,locker,Twilio){$scope.locker=locker,$scope.sendSMS=function(){Twilio.sendSMS({locker:$scope.locker.slot,number:$scope.phone},function(){$scope.message="Claim check sent!"},function(){$scope.message="Claim check could not be sent to that number."})},$scope.done=function(){$modalInstance.dismiss("cancel")}};angular.module("lockersApp").config(["$stateProvider",function($stateProvider){$stateProvider.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"MainCtrl"})}]),angular.module("lockersApp").factory("Locker",["$resource",function($resource){return $resource("/api/lockers/:id",{id:"@_id"},{update:{method:"PUT",params:{}},wipe:{method:"POST",url:"/api/lockers/clear",params:{}},setup:{method:"POST",url:"/api/lockers/setup",params:{},isArray:!0}})}]),angular.module("lockersApp").factory("Twilio",["$resource",function($resource){return $resource("/api/twilio/:locker/:number",{locker:"@locker",number:"@number"},{sendSMS:{method:"POST",params:{}}})}]),angular.module("lockersApp").controller("NavbarCtrl",["$scope","$location",function($scope,$location){$scope.menu=[{title:"Home",link:"/"},{title:"Admin",link:"/admin"}],$scope.isCollapsed=!0,$scope.isActive=function(route){return route===$location.path()}}]),angular.module("lockersApp").run(["$templateCache",function($templateCache){$templateCache.put("app/admin/admin.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-md-12><h1>Administration!</h1><div><p>When you hit the <strong>Create data</strong> button, the locker database will be cleared and re-seeded with a starter set of data.</p><div><p>There are {{lockers.length}} lockers.</p></div><div class=row><input pattern=\\d* name=lockerNumber ng-model=lockerNumber value=1> <button class="btn btn-primary btn-large" name=show-by-number-button ng-click=showByNumber()>Show me</button> {{selectedLocker}}</div><button class="btn btn-primary btn-large" name=seed ng-click=wipeData() ng-disabled=buttonDisabled>Wipe data</button> <button class="btn btn-primary btn-large" name=seed ng-click=createData() ng-disabled=buttonDisabled>Create data</button><div class=col-lg-12><h3>{{lockersInUse.length}} lockers in use.</h3><p ng-repeat="locker in lockersInUse">Slot: {{locker.slot}}, Size: {{locker.size}}</p></div></div></div></div></div>'),$templateCache.put("app/main/main.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><header class=hero-unit id=banner><div class=container><h1>GoldiLockers!</h1><p class=lead>Drop your stuff in our lockers. They\'re sized just right!</p></div></header><div class=container><div class=row><div class=col-lg-12><h1 class=text-center>{{openLockers}} are waiting to be filled with stuff!</h1><p class=text-center>There are {{lockers.length}} in all. That means {{((lockers.length-openLockers)/lockers.length)*100 | number:2}}% occupancy.</p></div><div><div class=row><div class="col-lg-4 big-clicker" ng-click="dropOff(\'small\')"><p class=words>Too small</p><p class=caption>Small lockers free: {{smallCountNotInUse}}</p></div><div class="col-lg-4 big-clicker" ng-click="dropOff(\'medium\')"><p class=words>Just right!</p><p class=caption>Medium lockers free: {{mediumCountNotInUse}}</p></div><div class="col-lg-4 big-clicker" ng-click="dropOff(\'large\')"><p class=words>Too BIG!</p><p class=caption>Large lockers free: {{largeCountNotInUse}}</p></div></div><div class=row><div class="claim-it col-lg-6 col-lg-offset-3"><form ng-submit=pickUp()><p><input pattern=\\d* ng-model=lockerNumber name=lockerNumber size=4></p><p><input class="btn btn-large btn-primary" type=submit value="Pick it up!"></p><p ng-show=pickupMessage>{{pickupMessage}}</p></form></div></div><!-- row --></div><script type=text/ng-template id=myModalContent.html><div class="modal-header">\n        <h3 class="modal-title">Claim Check</h3>\n    </div>\n    <div class="modal-body">\n      <div class="claim-check">\n        <h2>Claim Check</h2>\n        <h5>{{locker.size}}</h4>\n        <h1 class="claim-id">{{locker.slot}}</h1>\n        <h4>Locker Number</h4>\n        <div class="send-sms">\n          <form name="myForm" novalidate ng-submit="sendSMS(myForm)">\n            <p><input type="tel" ng-model="$parent.phone" name="phone" placeholder="800-555-1212"></p>\n            <p><button type="submit" class="btn btn-info btn-sm">Send SMS Claim Check</button></p>\n          </form>\n          <p>{{message}}</p>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button class="btn btn-warning" ng-click="done()">Done</button>\n    </div></script><footer class=footer><div class=container><p><a href=https://twitter.com/danielmarlow>@danielmarlow</a> | <a href=https://github.com/DanielMarlow/lockers>GitHub</a></p></div></footer></div></div>'),$templateCache.put("components/navbar/navbar.html",'<div class="navbar navbar-default navbar-static-top" ng-controller=NavbarCtrl><div class=container><div class=navbar-header><button class=navbar-toggle type=button ng-click="isCollapsed = !isCollapsed"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a href="/" class=navbar-brand>lockers</a></div><div collapse=isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav"><li ng-repeat="item in menu" ng-class="{active: isActive(item.link)}"><a ng-href={{item.link}}>{{item.title}}</a></li></ul></div></div></div>')}]);